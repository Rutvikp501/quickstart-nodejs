openapi: 3.0.0
info:
  title: Boiler Plate API
  version: 1.0.0
  description: User authentication and management APIs

servers:
  - url: http://localhost:5000
    description: Local server

tags:
  - name: User
    description: User Authentication & Management

paths:
  /api/user/register:
    post:
      tags: [User]
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password]
              properties:
                name:
                  type: string
                email:
                  type: 
                phone:
                  type: string
                password:
                  type: string
                role:
                  type: string
                isActive:
                  type: boolean
                isAdmin:
                  type: boolean               
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid request

  /api/user/login:
    post:
      tags: [User]
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials

  /api/user/forgot-password:
    post:
      tags: [User]
      summary: Send OTP to user's email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
      responses:
        '200':
          description: OTP sent
        '404':
          description: Email not found

  /api/user/verify-otp:
    post:
      tags: [User]
      summary: Verify OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, otp]
              properties:
                email:
                  type: string
                otp:
                  type: string
      responses:
        '200':
          description: OTP verified
        '400':
          description: Invalid OTP

  /api/user/reset-password:
    post:
      tags: [User]
      summary: Reset password using verified OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, newPassword]
              properties:
                email:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Password reset successfully
        '400':
          description: OTP not verified or expired

  /api/user/:
    get:
      tags: [User]
      summary: Get all users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
        '401':
          description: Unauthorized

  /api/user/{id}:
    get:
      tags: [User]
      summary: Get a user by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
        '404':
          description: User not found

    put:
      tags: [User]
      summary: Update a user by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                phone:
                  type: string
      responses:
        '200':
          description: User updated successfully

    delete:
      tags: [User]
      summary: Delete a user (Admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted
        '403':
          description: Forbidden - Admin access required

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
